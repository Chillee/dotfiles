#! /bin/sh

if [ $(pgrep -cx panel) -gt 1 ] ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

cleanup() {
	trap - TERM
	rm "$PANEL_FIFO"
	bspc config top_padding 0
	kill 0
}
trap 'cleanup' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"
bspc config top_padding "$PANEL_HEIGHT"

#readonly colortest="\l\f00[]()#=\f11[]()#=\f22[]()#=\f33[]()#=\f44[]()#=\f55[]()#=\f66[]()#=\f77[]()#=\f88[]()#=\f99[]()#="

{
	bspc control --subscribe &
	sleep 0.01 # Don't choke bar
	echo "V"
	sleep 0.01
	battery -s -f 'B%s %i' &
	sleep 0.01
	xtitle -s -f 'T%s' &
	sleep 0.01
	essid -s -w wlp2s0 -f 'N%s' &
	sleep 0.01
	clock -s -f 'C\f9%a %d \fr%-l:%M'
} > "$PANEL_FIFO" &

while read -r line ; do
    case $line in
		T*)
			# title output
			title_infos="\f4❭ \f9${line#?}"
			;;
		V*)
			# volume output
			IFS='[]%' read -r -d'\0' -a volStats <<< "$(amixer get Master)"
			if [[ "${volStats[6]}" == "on" ]]; then
				volume_infos="\f4⮞ \f9${volStats[1]}"
			else
				volume_infos="\f4⮝ \f9${volStats[1]}"
			fi
			;;
		B*)
			# battery output
			IFS=' ' read -r -a batStats <<< "${line#?}"
			bat_status=${batStats[0]}
			bat_charge=${batStats[1]}

			if [ $bat_charge -ge 35 ]; then
				charge_color=6
			elif [ $bat_charge -ge 15 ]; then
				charge_color=1
			else charge_color=8
			fi

			if [ "$bat_status" == "Charging" ]; then
				battery_infos="\f4⮒ \f9${bat_charge}+"
			elif [ "$bat_status" == "Discharging" ]; then
				battery_infos="\f4⮒ \f${charge_color}${bat_charge}-"
			else 
				battery_infos="\f4⮎ \f9AC"
			fi
			;;
        C*)
            # clock output
            clock_infos="\f4⭧ ${line#?}"
            ;;
		N*)
			# network
			net_name="${line#?}"
			if [[ -n "$net_name" ]]; then
				IFS=' |.' read -r -d'\0' -a wlInfo < /proc/net/wireless
				sigStrength=${wlInfo[20]}

				if [[ $sigStrength -ge 65 ]]; then
					network_infos="\f4‗▬▪▮ \f9${net_name}"
				elif [[ $sigStrength -ge 40 ]]; then
					network_infos="\f4‗▬▪\f9▮ ${net_name}"
				else
					network_infos="\f4‗▬\f9▪▮ ${net_name}"
				fi
			else
				network_infos="\f9‗▬▪▮ Not connected"
			fi
			;;
        W*)
            # bspwm internal state
            wm_infos=""
            IFS=':'
            set -- ${line#?}
            while [ $# -gt 0 ] ; do
                item=$1
                name=${item#?}
                case $item in
                    [OFU]*)
                        # active desktop
                        wm_infos="$wm_infos\f2\u4 • \ur"
                        ;;
                    o*)
                        # inactive but occupied desktop
                        wm_infos="$wm_infos\f2 • "
                        ;;
                    f*)
                        # inactive desktop
                        wm_infos="$wm_infos\f9 ○ "
                        ;;
                    u*)
                        # urgent desktop
                        wm_infos="$wm_infos\f8 • "
                        ;;
                esac
                shift
            done
            ;;
    esac
	printf "%s\n" "$title_infos\
		\c$wm_infos\
		\r\f2⮃ $volume_infos \f2⮃ $network_infos \f2⮃ $battery_infos \f2⮃ $clock_infos"
done < "$PANEL_FIFO" | bar

wait
