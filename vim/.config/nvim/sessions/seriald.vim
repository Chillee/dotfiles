" ~/.dotfiles/vim/.config/nvim/sessions/seriald.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 17 April 2016 at 16:19:06.
" Open this file in Vim and run :source % to restore your session.

let &makeprg = 'make'
if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'PaperColor' | colorscheme PaperColor | endif
call setqflist([])
let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/code/auv/serial/seriald
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +21 config.cpp
badd +11 config.toml
badd +21 config.h
badd +23 shm_share.cpp
badd +17 shm_share.h
badd +46 device.h
badd +26 configure.py
badd +27 test/config.cpp
badd +28 main.cpp
badd +22 ~/code/auv/serial/libserial/Manager.cpp
badd +48 ~/code/auv/serial/libserial/Manager.h
badd +15 test/config.toml
badd +1 \'/home/alex/code/auv/serial/seriald/devices.h\'
badd +30 devices.h
badd +1 \'/home/alex/code/auv/serial/seriald/devices.cpp\'
badd +26 devices.cpp
badd +35 device.cpp
badd +1 devices.gpp
badd +8 logger.h
badd +1 logger.cpp
badd +15 ~/.dotfiles/vim/.config/nvim/init.vim
badd +1 device_list.cpp
badd +32 device_list.h
badd +36 test/config/config.cpp
badd +24 sub_status.h
badd +23 sub_status.cpp
argglobal
silent! argdel *
argadd config.cpp
edit device.cpp
set splitbelow splitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 66 - ((65 * winheight(0) + 37) / 75)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
66
normal! 095|
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

1wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
